#include <stdio.h>

void p5_p2(){
   int width = 0, height = 0, pixels = 0;
    unsigned char buffer;

    fprintf(stderr, "Converting P5 to P4, BIN grayscale to bin black and white\n");

    putchar('P');
    putchar('4');
    putchar('\n');

    // copy rows
    while ((buffer = getchar()) != ' ') {
        if (buffer == '#') {
            putchar('#');
            while ((buffer = getchar()) != '\n') {
                putchar(buffer);
            }
            putchar('\n');
            continue;
        }
        unsigned char number = buffer - 48;
        width = width * 10 + number;

        putchar(buffer);
    }
    putchar(' ');

    // copy columns
    while ((buffer = getchar()) != '\n') {
        unsigned char number = buffer - 48;
        height = height * 10 + number;

        putchar(buffer);
    }
    putchar('\n');

    // depth
    int depth = 0;

    while ((buffer = getchar()) != '\n') {
        unsigned char number = buffer - 48;
        depth = depth * 10 + number;
    }
   
    pixels = width *height;

    fprintf(stderr, "Rows    : %d \n", height);
    fprintf(stderr, "Columns : %d \n", width);
    fprintf(stderr, "Pixels  : %d \n", pixels);

    for (int i = 0; i < height; i++) { // for each row ...
        int row_bytes = width / 8;

        for (int j = 0; j < row_bytes; j++) {
            int a = getchar();

            putchar(a+48);
        }

        int remaining_bytes = width % 8;
        
        if (remaining_bytes > 0) {

            for (int j=0;j<remaining_bytes;j++) {
                int a = getchar();
               
                
            }

            putchar(a+48);
        }
    }

    putchar('\n');

  
}


int main(void) {
  p5_p2();
  return 0;
}